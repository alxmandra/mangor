version: '3'
x-common-variables: &common-variables
  MYSQL_DATABASE: mangor
  MYSQL_USER: MYSQL_USER
  MYSQL_PASSWORD: MYSQL_PASSWORD
services:
    mysql_db:
        image: mysql
        restart: always
        cap_add:
        - SYS_NICE
        volumes:
        - "./setup.sql:/docker-entrypoint-initdb.d/setup.sql"
        ports:
        - "9906:3306"
        environment:
            <<: *common-variables
            MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
            MYSQL_HOST: localhost
        networks:
            - example-net
    adminer:
      image: adminer:latest
      restart: unless-stopped
      ports:
        - 8000:8080
      depends_on:
        - mysql_db
      environment:
        ADMINER_DEFAULT_SERVER: mysql_db
      networks:
            - example-net
    mongo:
        container_name: mongo
        image: mongo:4.4.6 #latest at the moment version has an issue with cpu compatibility. Thus - stick with exact working
        hostname: mongo
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s
        volumes:
            - ./data:/data/db
        ports:
            - "27017:27017" 
        networks:
            - example-net
    web:
        build:
          context: ./web
        container_name: web
        hostname: web
        ports:
        - '3000:3000'
        networks:
            - example-net
        depends_on:
             - authentication
        environment:
        - SHARED_STORE=localhost:3003
        - REACT_APP_AUTH_SERVER=localhost:3002
        - AUTHENTICATION=localhost:3001
    shared_store:
        build:
          context: ./shared_store
        container_name: shared_store
        hostname: shared_store
        ports:
        - '3003:3003'
        networks:
            - example-net
    auth-server:
        build:
          context: ./auth-server
        container_name: auth-server
        hostname: auth-server
        ports:
        - '3002:3002'
        networks:
            - example-net
        depends_on:
             - mongo
        environment:
             - MONGO_DB_CONNECTION_STRING= 'mongodb://mongo:27017/mern_auth'
    authentication:
        build:
          context: ./authentication
        container_name: authentication
        hostname: authentication
        ports:
        - '3001:3001'
        networks:
            - example-net
        depends_on:
             - auth-server
             - shared_store
        environment:
          - SHARED_STORE=localhost:3003
          - REACT_APP_AUTH_SERVER=localhost:3002
    nginx:
     image: nginx:1.15-alpine
     container_name: nginx
     hostname: nginx
     links:
          - "web"
     ports:
          - "80:80"
          - "443:443"
     volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./app.conf:/etc/nginx/conf.d/app.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
     depends_on:
          - mongo
     networks:
            - example-net
    certbot:
     image: certbot/certbot
     volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
     networks:
            - example-net

networks:
  example-net:
    driver: bridge
